using System;
using System.Runtime.InteropServices;
using AMSI_Hooks.Helpers;

namespace AMSI_Hooks.AntiMalwareScanInterface
{
    /// <summary>
    /// C# wrapper for the AMSI AntiMalware Scan Interface. 
    /// https://stackoverflow.com/questions/40888849/windows-defender-antivirus-scan-from-c-sharp-accessviolation-exception
    /// </summary>
    public class AntiMalwareScanInterface
    {
        
        [DllImport("Amsi.dll", EntryPoint = "AmsiInitialize", CallingConvention = CallingConvention.StdCall)]
        public static extern int AmsiInitialize([MarshalAs(UnmanagedType.LPWStr)]string appName, out IntPtr amsiContext);

        [DllImport("Amsi.dll", EntryPoint = "AmsiUninitialize", CallingConvention = CallingConvention.StdCall)]
        public static extern void AmsiUninitialize(IntPtr amsiContext);

        [DllImport("Amsi.dll", EntryPoint = "AmsiOpenSession", CallingConvention = CallingConvention.StdCall)]
        public static extern int AmsiOpenSession(IntPtr amsiContext, out IntPtr session);

        [DllImport("Amsi.dll", EntryPoint = "AmsiCloseSession", CallingConvention = CallingConvention.StdCall)]
        public static extern void AmsiCloseSession(IntPtr amsiContext, IntPtr session);

        [DllImport("Amsi.dll", EntryPoint = "AmsiScanString", CallingConvention = CallingConvention.StdCall)]
        public static extern int AmsiScanString(IntPtr amsiContext, [InAttribute()] [MarshalAsAttribute(UnmanagedType.LPWStr)]string @string, [InAttribute()] [MarshalAsAttribute(UnmanagedType.LPWStr)]string contentName, IntPtr session, out int sresult);
        [DllImport("Amsi.dll", EntryPoint = "AmsiScanBuffer", CallingConvention = CallingConvention.StdCall)]
        public static extern int AmsiScanBuffer(IntPtr amsiContext, byte[] buffer, uint length, string contentName, IntPtr session, out int result);

        /// <summary>
        /// Scan a supplied string using the AMSI AntiMalware Scan Interface. 
        /// </summary>
        /// <param name="sample">The string to scan</param>
        /// <returns>AMSI_RESULT enum containig the scan result</returns>
        public bool CallAntimalwareScanInterface(string sample)
        {
            IntPtr amsiContext;
            IntPtr session;
            int result = 0;
            int returnValue;

            returnValue = AmsiInitialize(@"PowerShell_C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe_10.0.18362.1", out amsiContext);    
            returnValue = AmsiOpenSession(amsiContext, out session);
            returnValue = AmsiScanString(amsiContext, sample, "Sample", session, out result);    
            AmsiCloseSession(amsiContext, session);
            AmsiUninitialize(amsiContext);
            return ResultHelper.ResultIsMalware(result);
        }

        public bool CallAntimalwareScanInterface(byte[] sample)
        {
            IntPtr amsiContext;
            IntPtr session;
            int result = 0;
            int returnValue;

            returnValue = AmsiInitialize(@"PowerShell_C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe_10.0.18362.1", out amsiContext);
            returnValue = AmsiOpenSession(amsiContext, out session);
            returnValue = AmsiScanBuffer(amsiContext, sample, (uint)sample.Length, "Sample", session, out result);
            AmsiCloseSession(amsiContext, session);
            AmsiUninitialize(amsiContext);
            return ResultHelper.ResultIsMalware(result);
        }
    }
}
